


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Área de Dados - Declarações de variáveis
   13 00000000                 AREA             DATA, ALIGN=2
   14 00000000         ; Se alguma variável for chamada em outro arquivo
   15 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   16 00000000         ; partir de outro arquivo
   17 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   18 00000000         ; de <tam> bytes a partir da primeira 
   19 00000000         ; posição da RAM  
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   23 00000000         ;                  código
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000         
   26 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   27 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   28 00000000         ; outro arquivo. No caso startup.s
   29 00000000         
   30 00000000         ; Se chamar alguma função externa 
   31 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   32 00000000         ; função <func>
   33 00000000         
   34 00000000         ; ------------------------------------------------------
                       -------------------------
   35 00000000         ; Função main()
   36 00000000         Start
   37 00000000         ; Comece o código aqui <================================
                       ======================
   38 00000000         
   39 00000000 F04F 5000 
                       inicio  MOV              R0, #0x20000000
   40 00000004 F04F 010A       MOV              R1, #10
   41 00000008 F04F 0200       MOV              R2, #0
   42 0000000C F04F 0301       MOV              R3, #1
   43 00000010 7804    loopext LDRB             R4, [R0]



ARM Macro Assembler    Page 2 


   44 00000012 7845            LDRB             R5, [R0, #1]
   45 00000014 42AC            CMP              R4, R5
   46 00000016 DD03            BLE              increm
   47 00000018 F04F 0201       MOV              R2, #1
   48 0000001C 7005            STRB             R5, [R0]
   49 0000001E 7044            STRB             R4, [R0, #1]
   50 00000020 F103 0301 
                       increm  ADD              R3, #1
   51 00000024 F100 0001       ADD              R0, #1
   52 00000028 428B            CMP              R3, R1
   53 0000002A D1F1            BNE              loopext
   54 0000002C 2A00            CMP              R2, #0
   55 0000002E D1E7            BNE              inicio
   56 00000030 BF00            NOP
   57 00000032 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
   58 00000034                 END                          ; fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\exemplo.d -o.\objects\exemplo.o -I.\RTE\_Target_1 -IC
:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\
CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 5
26" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 13 in file exemplo.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file exemplo.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 36 in file exemplo.s
   Uses
      At line 27 in file exemplo.s
Comment: Start used once
increm 00000020

Symbol: increm
   Definitions
      At line 50 in file exemplo.s
   Uses
      At line 46 in file exemplo.s
Comment: increm used once
inicio 00000000

Symbol: inicio
   Definitions
      At line 39 in file exemplo.s
   Uses
      At line 55 in file exemplo.s
Comment: inicio used once
loopext 00000010

Symbol: loopext
   Definitions
      At line 43 in file exemplo.s
   Uses
      At line 53 in file exemplo.s
Comment: loopext used once
5 symbols
340 symbols in table
